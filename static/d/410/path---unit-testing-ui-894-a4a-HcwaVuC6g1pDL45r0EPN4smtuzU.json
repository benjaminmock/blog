{"data":{"mdx":{"id":"1750101c-6d40-5624-9355-06a5e394b496","frontmatter":{"title":"Unit testing UI","date":"June 20, 2016","draft":null},"code":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Unit testing UI\",\n  \"date\": \"2016-06-20T00:00:00.000Z\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components\n  }), mdx(\"p\", null, \"I recently read\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://product.voxmedia.com/2016/4/20/11458814/how-designers-can-use-unit-testing-to-build-resilient-and-happy-design-systems\"\n  }), \"this excellent article\"), \",\\nwhere the design team at Vox has devised a testing framework for new UI \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/blog/blog/posts/components\"\n  }), \"components\"), \" introduced into their pattern library.\\nWhile the methods they suggest are excellent, and what I\\u2019d consider something that should be industry-standard in our field,\\nit got me thinking that this concept could be taken a step further.\\nWhat if designers wrote actual unit tests for UI components?\\nWhat if those tests were actually applied in user acceptance testing, A/B tests, and tested against performance metrics?\"), mdx(\"h2\", {\n    \"id\": \"what-would-a-unit-test-look-like\"\n  }, \"What would a unit test look like?\"), mdx(\"p\", null, \"This is a really contrived example of what a UI unit test could look like:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"describe: CTA button\\n  context: when a user sees the button\\n    expect: Users should know that the button is clickable\\n    expect: User should be able to click the button\\n    expect: Conversions should be above 4%\\n\")), mdx(\"p\", null, \"Taking a cue from test driven development, these tests should be written before any design work is started, and they should \\\"fail\\\"  \\u2013 because there\\u2019s no design yet.\"), mdx(\"p\", null, \"Any work that follows should be towards making those tests pass.\"), mdx(\"p\", null, \"You might notice that this looks suspiciously like a \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://en.wikipedia.org/wiki/User_story\"\n  }), \"user story\"), \",\\nbut I think this approach differs in a few ways.\\nFirst, user stories attempt to capture the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"how\"), \" and \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"why\"), \" in addition to the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"what.\"), \"\\nThese unit tests only concern themselves with \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"what\"), \".\\nSecondly, user stories are very much a part of Agile software development,\\nwhereas these are simply meant to measure the design of UI components.\"), mdx(\"h2\", {\n    \"id\": \"running-tests\"\n  }, \"\\u201CRunning\\u201D tests\"), mdx(\"p\", null, \"Once you have a potential component, or even better, several potential components,\\nyou\\u2019d be ready to start testing it against the unit tests previously written.\\nThese tests shouldn\\u2019t overshadow the typical formats and methodologies of user testing, A/B testing, etc.\\nInstead, they should be used as an analytical tool to gauge the results.\"), mdx(\"p\", null, \"If, when user testing a feature, the user doesn\\u2019t notice the button, there\\u2019s still more design work to do.\"), mdx(\"p\", null, \"If, after ramping up a new button component, A/B testing shows that conversion is lower than expected, there\\u2019s still more work to do.\"), mdx(\"p\", null, \"If users are bouncing at higher-than-anticipated rates because of slow page load, there\\u2019s still more work to be done.\"), mdx(\"p\", null, \"Now, I will admit that design work is a lot less black and white than software development can be, and that it might be easy to shoot yourself in the foot with an approach like this. If, for example, conversion never gets above 3.9%, and you spend 2 weeks designing and redesigning a button, there are probably some other variables affecting things, and there are better ways to prioritize your time.\"), mdx(\"p\", null, \"But taking this idea as an approach to problem solving, gauging the efficacy of a design solution, and setting up goals for a product, I think it\\u2019s a concept worth exploring.\"));\n}\nMDXContent.isMDXComponent = true;"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"1750101c-6d40-5624-9355-06a5e394b496"}}