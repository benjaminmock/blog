{"data":{"mdx":{"id":"f1a98512-bab1-5a7a-baf7-dfb7b56d344e","frontmatter":{"title":"Zero-Configuration React Static Site Generator","date":"February 15, 2016","draft":null},"code":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Zero-Configuration React Static Site Generator\",\n  \"date\": \"2016-02-15T00:00:00.000Z\",\n  \"tags\": [\"react\", \"static-site-generator\"],\n  \"related\": [{\n    \"name\": \"Static Site Generation with React and Webpack\",\n    \"href\": \"http://jxnblk.com/blog/posts/static-site-generation-with-react-and-webpack/\"\n  }]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components\n  }), mdx(\"p\", null, \"React is a great way to generate static HTML with a component-based UI.\\nOne of the biggest hurdles to working with React is the amount of boilerplate and build configuration it takes to get going.\\nI wanted to make it dead-simple to start building static pages with React\\nand without the need to install tons of npm modules and configure webpack.\"), mdx(\"p\", null, \"That\\u2019s where \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/jxnblk/static-react\"\n  }), \"static-react\"), \" comes in. Here\\u2019s out to get started.\"), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Update: As of version 3.2.0, static-react includes Babel presets and they do not need to be installed separately. This post has been updated to reflect those changes.\")), mdx(\"h2\", {\n    \"id\": \"1-install-dependencies\"\n  }, \"1. Install Dependencies\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"npm i -D react static-react\\n\")), mdx(\"p\", null, mdx(\"del\", {\n    parentName: \"p\"\n  }, \"The Babel presets are optional, but make working with React much nicer, in my opinion.\")), mdx(\"h2\", {\n    \"id\": \"2-add-a-run-script\"\n  }, \"2. Add a Run Script\"), mdx(\"p\", null, \"Add the following run script to package.json.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"\\\"scripts\\\": {\\n  \\\"start\\\": \\\"static-react components/Root.js > index.html\\\"\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"3-configure-babel-optional-\"\n  }, mdx(\"del\", {\n    parentName: \"h2\"\n  }, \"3. Configure Babel (Optional) \", mdx(\"a\", _extends({\n    parentName: \"del\"\n  }, {\n    \"href\": \"#1\"\n  }), \"*\"))), mdx(\"p\", null, mdx(\"del\", {\n    parentName: \"p\"\n  }, \"Add the following to package.json.\")), mdx(\"h2\", {\n    \"id\": \"4-add-components\"\n  }, \"4. Add Components\"), mdx(\"p\", null, \"Create a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"components\"), \" directory and a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Root.js\"), \" React component.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"// Root.js\\nimport React from 'react'\\n\\nclass Root extends React.Component {\\n  render () {\\n    return <h1>Hello</h1>\\n  }\\n}\\n\\nexport default Root\\n\")), mdx(\"h2\", {\n    \"id\": \"5-build\"\n  }, \"5. Build\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"npm start\\n\")), mdx(\"p\", null, \"Open \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"index.html\"), \" and you should see the rendered Root component.\"), mdx(\"h2\", {\n    \"id\": \"building-out-a-page\"\n  }, \"Building Out a Page\"), mdx(\"p\", null, \"You'll certainly want more than just a heading in the final page.\\nBuild out some more components and run \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"npm start\"), \" to rebuild.\"), mdx(\"p\", null, \"Here is an example set of starter components:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"// Root.js\\nimport React from 'react'\\nimport Head from './Head'\\nimport Header from './Header'\\nimport Main from './Main'\\nimport Footer from './Footer'\\n\\nclass Root extends React.Component {\\n  render () {\\n    return (\\n      <html>\\n        <Head title='Static React Demo' />\\n        <body className='px3'>\\n          <Header title='Hello' />\\n          <Main />\\n          <Footer />\\n        </body>\\n      </html>\\n    )\\n  }\\n}\\n\\nexport default Root\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"// Head.js\\nimport React from 'react'\\n\\nconst Head = ({ title }) => (\\n  <head>\\n    <meta charSet='utf-8' />\\n    <title>{title}</title>\\n    <link href='https://npmcdn.com/basscss-basic@1.0.0/index.css' rel='stylesheet' />\\n    <link href='https://npmcdn.com/basscss@8.0.0/css/basscss.min.css' rel='stylesheet' />\\n    <meta name='viewport' content='width=device-width, initial-scale=1' />\\n  </head>\\n)\\n\\nexport default Head\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"// Header.js\\nimport React from 'react'\\n\\nconst Header = ({ title }) => (\\n  <header className='py3'>\\n    <h1>{title}</h1>\\n  </header>\\n)\\n\\nexport default Header\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"// Main.js\\nimport React from 'react'\\n\\nconst Main = () => (\\n  <main className='py4'>\\n    <img src='http://lorempixel.com/256/256/cats/'\\n      alt='Kitten' />\\n  </main>\\n)\\n\\nexport default Main\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"// Footer.js\\nimport React from 'react'\\n\\nconst Footer = () => (\\n  <footer className='py3'>\\n    <p>\\xA9 2016 Brent Jackson</p>\\n  </footer>\\n)\\n\\nexport default Footer\\n\")), mdx(\"p\", null, \"If you have any thoughts on or issues with the static-react module, please check out the repo on \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/jxnblk/static-react\"\n  }), \"GitHub\"), \".\"), mdx(\"p\", {\n    id: \"1\",\n    className: \"mt3 italic\"\n  }, mdx(\"del\", null, \"* Technically, I guess this post should be titled \", mdx(\"b\", null, \"Near-Zero-Configuration\"), \", but using Babel is completely optional.\")));\n}\nMDXContent.isMDXComponent = true;"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"f1a98512-bab1-5a7a-baf7-dfb7b56d344e"}}