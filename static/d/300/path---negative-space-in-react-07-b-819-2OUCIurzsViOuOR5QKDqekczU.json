{"data":{"mdx":{"id":"2edee29c-b439-5444-b0c6-6aff71984b62","frontmatter":{"title":"Negative space in react","date":"August 23, 2016","draft":true},"code":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Negative space in react\",\n  \"date\": \"2016-08-23T00:00:00.000Z\",\n  \"draft\": true,\n  \"tags\": [\"react\", \"design\", \"style\", \"css\", \"margin\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components\n  }), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"White space is to be regarded as an active element, not a passive background.\"), mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u2013 Jan Tschichold\")), mdx(\"p\", null, \"Negative space is arguably the most important part of a visual composition.\"), mdx(\"p\", null, \"Just as in music, the rests, breathing room, and headspace are the key players in rhythm.\\nWithout them, you just have noise.\\nSimilarly, negative space in design helps create the rhythm, contrast, and motion in a visual composition.\"), mdx(\"p\", null, \"When creating visual rhythm on the web, margin and padding is the abstraction we use most commonly for negative space.\\nDespite its importance in the overall composition, margin isn't usually treated as a declarative equal in component based architectures.\\nAnd, because of this, it's difficult to determine whether white space belongs to the child component or the parent.\"), mdx(\"h2\", {\n    \"id\": \"personal-bubbles\"\n  }, \"Personal bubbles\"), mdx(\"p\", null, \"I sometimes like to think of an element\\u2019s whitespace as it's \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"personal bubble\"), \".\\nThat is, different societies of humans have different distances at which they consider normal to keep when having a conversation.\\nSome cultures have much smaller personal bubbles than Americans,\\nand when people from these cultures visit or immigrate to the US,\\namericans may feel uncomfortable with how close the other person is standing to them and unconsciously back away.\\nSimilarly, when Americans visit cultures with larger personal bubbles, the American is the one forcing others to back away.\"), mdx(\"p\", null, \"Components obviously aren't people but they too can differ in the amount of whitespace they need,\\nand create interesting dynamics among the different parts of a UI.\"), mdx(\"h2\", {\n    \"id\": \"approaches\"\n  }, \"Approaches\"), mdx(\"p\", null, \"There are two predominant ways of handling whitespace in component based systems.\\nThe first involves components defining their own margins, which is how\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://jxnblk.com/rebass\"\n  }), \"Rebass\"), \" and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://jxnblk.com/reflexbox\"\n  }), \"Reflexbox\"), \" provide margin props.\\nThe second involves a parent component wrapping child components with padded containers, similar to\\nHugo Bessa\\u2019s \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://hugobessa.com.br/2016/07/20/composable-components/#layout-components\"\n  }), \"Spacing component\"), \".\\nA third, but less common approach is \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://jxnblk.com/rebass\"\n  }), \"Rebass\\u2018s\"), \" Space component,\\nwhich declaratively creates space between other elements.\"), mdx(\"h3\", {\n    \"id\": \"margin-props\"\n  }, \"Margin Props\"), mdx(\"p\", null, \"Let's explore the first method where a component defines its own margins.\"), mdx(\"h3\", {\n    \"id\": \"parent-layout-component\"\n  }, \"Parent Layout Component\"), mdx(\"p\", null, \"Now let's take a look at the second method, where the parent defines margins of its children.\"), mdx(\"h3\", {\n    \"id\": \"space-component\"\n  }, \"Space Component\"), mdx(\"p\", null, \"Lastly, let's explore a space component that declaratively adds space between components.\"), mdx(\"h3\", {\n    \"id\": \"combined-approach\"\n  }, \"Combined Approach\"), mdx(\"p\", null, \"We can actually devise a system that allows for all of the approaches listed above.\\nTo start, we need a component that manages its own margin.\"), mdx(\"hr\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"HOC for other components\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"It accepts m props\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Next, let's create a convenience parent wrapper\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"It could work with the m prop or go lower level and apply styles\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Box component is somewhere in between\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Parent spacer component in rebass\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Row, Arrange, Align,\")), mdx(\"p\", null, \"Each has its trade offs\"), mdx(\"p\", null, \"Declarative spacer is verbose and can be cumbersome to manage efficiently. It also destroys a convenient aspect of CSS: margin collapsing\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"two elements before and after an item\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Changes based on context: inline vs block\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Desire lines from other devs, nbsp & br\")), mdx(\"p\", null, \"Parent spacer has its own limitations\\nSimilar to traditional CSS grid sys it doesn't allow for much flexibility\"));\n}\nMDXContent.isMDXComponent = true;"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"2edee29c-b439-5444-b0c6-6aff71984b62"}}